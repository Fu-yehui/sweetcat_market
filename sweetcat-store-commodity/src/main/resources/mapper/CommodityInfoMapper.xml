<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sweetcat.storecommodity.infrastructure.dao.CommodityInfoMapper">
    <resultMap id="BaseResultMap" type="com.sweetcat.storecommodity.infrastructure.po.CommodityInfoPO">
        <id column="commodity_id" jdbcType="BIGINT" property="commodityId"/>
        <result column="store_id" jdbcType="BIGINT" property="storeId"/>
        <result column="commodity_name" jdbcType="VARCHAR" property="commodityName"/>
        <result column="brand" jdbcType="VARCHAR" property="brand"/>
        <result column="pic_small" jdbcType="VARCHAR" property="picSmall"/>
        <result column="pic_big" jdbcType="VARCHAR" property="picBig"
                typeHandler="com.sweetcat.storecommodity.infrastructure.dao.typehandler.ListCharTypeHandler"/>
        <result column="first_category" jdbcType="VARCHAR" property="firstCategory"/>
        <result column="second_category" jdbcType="VARCHAR" property="secondCategory"/>
        <result column="third_category" jdbcType="VARCHAR" property="thirdCategory"/>
        <result column="use_times" jdbcType="TINYINT" property="useTimes"/>
        <result column="production_area" jdbcType="VARCHAR" property="productionArea"/>
        <result column="old_price" jdbcType="DECIMAL" property="oldPrice"/>
        <result column="current_price" jdbcType="DECIMAL" property="currentPrice"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="monthly_sales" jdbcType="INTEGER" property="monthlySales"/>
        <result column="add_to_car_number" jdbcType="INTEGER" property="addToCarNumber"/>
        <result column="collect_number" jdbcType="INTEGER" property="collectNumber"/>
        <result column="guarantee" jdbcType="VARCHAR" property="guarantee"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="status" jdbcType="BIGINT" property="status"/>
        <result column="specification" jdbcType="VARCHAR" property="specification"/>
        <result column="comment_number" jdbcType="BIGINT" property="commentNumber"/>
        <result column="default_post_charge" jdbcType="DECIMAL" property="defaultPostCharge"/>
        <result column="subjoin_charge_per_good" jdbcType="DECIMAL" property="subjoinChargePerGood"/>
        <result column="is_credit_can_offset" jdbcType="INTEGER" property="creditCanOffset"/>
        <result column="coin_counteract_rate" jdbcType="DECIMAL" property="coinCounteractRate"/>
    </resultMap>
    <sql id="Base_Column_List">
        commodity_id
        , store_id, commodity_name, brand, pic_small, pic_big, first_category,
    second_category, third_category, use_times, production_area, old_price, current_price, 
    description, stock, monthly_sales, add_to_car_number, collect_number, guarantee, 
    create_time, update_time, `status`, specification, comment_number, default_post_charge, 
    subjoin_charge_per_good, is_credit_can_offset, coin_counteract_rate
    </sql>
    <insert id="addOne">
        insert into t_store_commodity_info (<include refid="Base_Column_List"/>) values (
        #{commodityId}, #{storeId}, #{commodityName}, #{brand},#{picSmall},
        #{picBig, javaType=List, jdbcType=VARCHAR, typeHandler=com.sweetcat.storecommodity.infrastructure.dao.typehandler.ListCharTypeHandler},
        #{firstCategory}, #{secondCategory}, #{thirdCategory}, #{useTimes}, #{productionArea}, #{oldPrice},
        #{currentPrice},
        #{description}, #{stock}, #{monthlySales}, #{addToCarNumber}, #{collectNumber}, #{guarantee},
        #{createTime}, #{updateTime}, #{status}, #{specification}, #{commentNumber}, #{defaultPostCharge},
        #{subjoinChargePerGood}, #{creditCanOffset}, #{coinCounteractRate})
    </insert>
    <update id="updateOne">
        update t_store_commodity_info
        set commodity_name          = #{commodityName},
            brand                   = #{brand},
            pic_small               = #{picSmall},
            pic_big                 = #{picBig,
                                        javaType=List,
                                        jdbcType=VARCHAR,
                                        typeHandler=com.sweetcat.storecommodity.infrastructure.dao.typehandler.ListCharTypeHandler},
            first_category          = #{firstCategory},
            second_category         = #{secondCategory},
            third_category          = #{thirdCategory},
            use_times               = #{useTimes},
            production_area         = #{productionArea},
            old_price               = #{oldPrice},
            current_price           = #{currentPrice},
            description             = #{description},
            stock                   = #{stock},
            monthly_sales           = #{monthlySales},
            add_to_car_number       = #{addToCarNumber},
            collect_number          = #{collectNumber},
            guarantee               = #{guarantee},
            create_time             = #{createTime},
            update_time             = #{updateTime},
            `status`                = #{status},
            specification           = #{specification},
            comment_number          = #{commentNumber},
            default_post_charge     = #{defaultPostCharge},
            subjoin_charge_per_good = #{subjoinChargePerGood},
            is_credit_can_offset    = #{creditCanOffset},
            coin_counteract_rate    = #{coinCounteractRate}
        where commodity_id = #{commodityId}
    </update>
    <select id="findByCommodityId" resultType="com.sweetcat.storecommodity.infrastructure.po.CommodityInfoPO" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_store_commodity_info where commodity_id = #{commodityId}
    </select>
    <select id="findPageByStoreId" resultType="com.sweetcat.storecommodity.infrastructure.po.CommodityInfoPO">
        select
        <include refid="Base_Column_List"/>
        from t_store_commodity_info where store_id = #{storeId}
        order by create_time desc
        limit #{page}, #{limit}
    </select>
    <select id="findPageNewCommodities"
            resultType="com.sweetcat.storecommodity.infrastructure.po.CommodityInfoPO">
        select
        <include refid="Base_Column_List"/>
        from t_store_commodity_info
        where status = 1
        order by create_time desc
        limit #{page}, #{limit}
    </select>
    <select id="findPageCreditCanOffsetAPart"
            resultType="com.sweetcat.storecommodity.infrastructure.po.CommodityInfoPO">
        select
        <include refid="Base_Column_List"/>
        from t_store_commodity_info
        where is_credit_can_offset = 1
        limit #{page}, #{limit}
    </select>

</mapper>